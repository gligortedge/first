name: integration-tests
on:
  # Use a manual approval process before PR's are given access to
  # the secrets which are required to run the integration tests.
  # The PR code should be manually approved to see if it can be trusted.
  # When in doubt, do not approve the test run.
  # Reference: https://dev.to/petrsvihlik/using-environment-protection-rules-to-secure-secrets-when-building-external-forks-with-pullrequesttarget-hci
  pull_request_target:
    branches: [ main, add-robot-libraries ]
  push:
    branches: [ main, add-robot-libraries ]
  workflow_call:
    inputs:
      include:
        description: Only run tests matching tests with the given tags
        type: string
        required: false
        default: ""
      processes:
        description: Number of processes to run tests
        type: string
        required: false
        default: "10"
jobs:
  approve: # Wait for manual approval
    runs-on: ubuntu-latest
    steps:
    - name: Approve
      run: echo For security reasons, all pull requests need to be approved first before running any automated CI

  test:
    name: Test on ${{ matrix.job.arch }}
    needs: [approve]
    environment:
      name: Integrate Pull Request
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        job:
          - { arch: amd64 }
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }} # Check out the code of the PR. Only after the manual approval process
          fetch-depth: 0
      
      - name: create .env file
        working-directory: tests/RobotFramework
        run: |
          touch .env
          echo 'C8Y_BASEURL="${{ secrets.C8Y_BASEURL }}"' >> .env
          echo 'C8Y_TENANT="${{ secrets.C8Y_TENANT }}"' >> .env
          echo 'C8Y_USER="${{ secrets.C8Y_USER }}"' >> .env
          echo 'C8Y_PASSWORD="${{ secrets.C8Y_PASSWORD }}"' >> .env

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pipenv' # caching pip dependencies

      - name: Install dependencies
        env:
          PIPENV_VENV_IN_PROJECT: 0
        run: tests/RobotFramework/bin/setup.sh
      
      - name: Build images
        working-directory: tests/RobotFramework
        run: pipenv run invoke build

      - name: Remove docker networks
        run: |
          docker network rm $(docker network ls --filter "name=inttest-network" --format "{{ .ID }}") || true
          sleep 1
          docker network create inttest-network --driver bridge

      - name: Run tests
        working-directory: tests/RobotFramework
        run: |
          pipenv run \
            invoke test \
              --processes "${{ inputs.processes || '' }}" \
              --include "${{ inputs.include || '' }}" \
              --outputdir output

      - name: Upload test results
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: reports
          path: tests/RobotFramework/output

  generate_report:
    if: always()
    needs: [test] 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Download reports
      uses: actions/download-artifact@v1
      with:
        name: reports
    - name: Send report to commit
      uses: joonvena/robotframework-reporter-action@v2.1
      with:
        gh_access_token: ${{ secrets.GITHUB_TOKEN }}
